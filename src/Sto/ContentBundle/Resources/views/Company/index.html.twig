{% extends 'StoContentBundle::layout.html.twig' %}

{% block css %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('bootstrap/css/style-index.css') }}">
{% endblock %}

{% block js %}
    <script src="http://api-maps.yandex.ru/2.0-stable/?load=package.full&lang=ru-RU" type="text/javascript"></script>
    {{ parent() }}
    <script src="{{ asset('bootstrap/js/geolocation-button.js') }}"></script>
    <script src="{{ asset('bootstrap/js/jquery.bxslider.min.js') }}"></script>
    <script src="{{ asset('bootstrap/js/custom.geolocation.js') }}"></script>

    <script>
        var city = '{{ city.gps }}';
        var oldZoom = 11;
        var placemarkCollection;
        var mainMap;
        var globalCompanies;
        var globalSelectedItem = null;

        var typeIcons = [];
        {% for type in allTypes %}
            typeIcons[{{ type.id }}] = {
                'iconNameMap': '{{ type.iconNameMap }}',
                'iconNameMapSelected': '{{ type.iconNameMapSelected }}',
                'iconNameMapVip': '{{ type.iconNameMapVip }}',
                'iconNameMapVipSelected': '{{ type.iconNameMapVipSelected }}',
            };
        {% endfor %}

        function renderMap(companies) {
            filterDataByZoom(mainMap.getZoom(), companies);
            addButtonsToMap(mainMap, ymaps, GeolocationButton);

            mainMap.events.add('actionend', function (evt) {
                if (oldZoom != mainMap.getZoom()) {
                    filterDataByZoom(mainMap.getZoom(), globalCompanies);
                    oldZoom = mainMap.getZoom();
                }
            });
        }

        function addPlacemarks(companies) {
            var sel;
            $('div.listItemCompanyPlain').each(function () {
                if ($(this).css('display') == 'block') {
                    sel = $(this).attr('id').replace('x-list-company', '');
                }
            });

            for (var key in companies) {
                var val = companies[key];
                var placemark;
                var iconMap = "{{ asset('bootstrap/img/icon-map-default.png') }}";
                var iconMapSelected = "{{ asset('bootstrap/img/icon-map-default-active.png') }}";

                if(val.t) {
                    if (typeIcons[val.t].iconNameMap) {
                        iconMap = "/{{ storage_path }}/company_icon/" + typeIcons[val.t].iconNameMap;
                    }
                    if (typeIcons[val.t].iconNameMapSelected) {
                        iconMapSelected = "/{{ storage_path }}/company_icon/" + typeIcons[val.t].iconNameMapSelected;
                    }
                    // v for vip!
                    if (val.v) {
                        if (typeIcons[val.t].iconNameMapVip) {
                            iconMap = "/{{ storage_path }}/company_icon/" + typeIcons[val.t].iconNameMapVip;
                        }
                        if (typeIcons[val.t].iconNameMapVipSelected) {
                            iconMapSelected = "/{{ storage_path }}/company_icon/" + typeIcons[val.t].iconNameMapVipSelected;
                        }
                    }
                }

                var iconSize = (sel == val.id) ? [60, 42] : [34, 45];
                var img;

                if (val.t && showByRate(mainMap.getZoom(), val.rating)) {
                    img = {
                        iconImageHref: iconMap,
                        iconImageSize: iconSize,
                        hideIconOnBalloonOpen: false,
                        zIndex: 100
                    };
                } else {
                    img = {
                        iconImageHref: "{{ asset('bootstrap/img/dot.png') }}",
                        iconImageSize: [8, 8],
                        iconOffset: [0, 37],
                        hideIconOnBalloonOpen: false,
                        zIndex: 99
                    };
                    iconMap = "{{ asset('bootstrap/img/dot.png') }}";
                    iconMapSelected = "{{ asset('bootstrap/img/dot.png') }}";
                }

                ymaps.option.presetStorage.add("iconMap#" + val.id, {
                    iconImageHref: iconMap
                });
                ymaps.option.presetStorage.add("iconMapActive#" + val.id, {
                    iconImageHref: iconMapSelected
                });

                placemark = new ymaps.Placemark(val.g.split(','), {
                    id: val.id,
                    name: val.n,
                    hintContent: "<span class='companyMapHint'>" + val.n + "</span>",
                    body: 'Идет загрузка данных...',
                }, img);

                placemark.events.add('balloonopen', function (e) {
                    var obj = e.get('balloon');
                    var balloonOffset = [0, -30];
                    if (e.get('target').options.get('iconImageHref').indexOf('dot.png') != -1) {
                        balloonOffset = [-12, 2];
                    }
                    obj.options.set({ offset: balloonOffset });
                });
                placemark.events.add('click', function (e) {
                    selectedImg = ymaps.option.presetStorage.get("iconMapActive#" + e.get('target').properties.get('id')).iconImageHref;
                    if (e.get('target').options.get('iconImageHref').indexOf('dot.png') != -1) {
                        selectedImg = e.get('target').options.get('iconImageHref');
                    }
                    e.get('target').options.set('iconImageHref', selectedImg);
                });
                placemark.events.add('balloonclose', function (e) {
                    selectedImg = ymaps.option.presetStorage.get("iconMap#" + e.get('target').properties.get('id')).iconImageHref;
                    if (e.get('target').options.get('iconImageHref').indexOf('dot.png') != -1) {
                        selectedImg = e.get('target').options.get('iconImageHref');
                    }
                    e.get('target').options.set('iconImageHref', selectedImg);
                });

                placemarkCollection.add(placemark);
            }

            placemarkCollection.each(function (ob) {
                ob.events.add('click', onClick);
            });

            function onClick(e) {
                var placemark = e.get('target');
                var id = placemark.properties.get('id');
                $.ajax(Routing.generate('api_get_company_balloon', {id: id}), {
                    success : function (data) {
                        placemark.properties.set('body', data);

                        var itemId = "#list-company" + placemark.properties.get('id'),
                            listObj = $(itemId);

                        if (listObj.length && listObj.is(':visible')) {
                            placemark.balloon.open();
                            $('#companiesList').find('.bigInfoCompany').hide();
                            $('#companiesList').find('.smallInfoCompany').show();
                            listObj.find('.smallInfoCompany').hide();
                            listObj.find('.bigInfoCompany').show();
                        }
                    }
                });
            }

            var placemarkBalloonLayout = ymaps.templateLayoutFactory.createClass(
                '<div class="popupCardCompany">' +
                    '$[properties.body]' +
                '</div>'
            );

            ymaps.layout.storage.add('my#superlayout', placemarkBalloonLayout);
            placemarkCollection.options.set({
                balloonContentBodyLayout: 'my#superlayout',
                balloonMinWidth: 400
            });

            mainMap.geoObjects.add(placemarkCollection);
        }

        function filterDataByZoom(indexZoom, companies) {
            addPlacemarks(companies);

            $('.listItemCompany').each(function (index, element) {
                var el = $(element);
                var rating = parseFloat(el.find('div.span3 span.rating').text());
                if (showByRate(indexZoom, rating)) {
                    if ($('#' + el.attr('data-correspond')).css('display') == 'none') {
                        el.show();
                    }
                } else {
                    el.hide();
                    $('#' + el.attr('data-correspond')).hide();
                }
            });
        }

        function showByRate(pZoom, pRating) {
            {# For now we just return true, cos we need all icons on map to be visible #}
            {# later we need this functionality back to work #}
            return true;
//            if (pZoom == 11 && pRating > 8)
//                return true;
//            if (pZoom == 12 && pRating > 6)
//                return true;
//            if (pZoom == 13 && pRating > 4)
//                return true;
//            if (pZoom >= 14)
//                return true;
//            return false;
        }

        function companiesAjaxLoad() {
            $('#loading').show();
            $.ajax({
                url: Routing.generate('api_get_companies'),
                data: $('#advanced-search-form').serialize() + '&sort=' + $('#sto_content_company_sort_sort').val() + '&search={{ words }}',
                dataType: 'json',
                success: function(response){
                    globalCompanies = response;
                    var text = 'Найдено <span>' + response.length + '</span> ' + declensionOfNumerals(response.length, ['компания', 'компании', 'компаний']);
                    $('.contentTopCenter').html(text);

                    mainMap.geoObjects.each(function (geoCollection) {
                        geoCollection.each(function (item) {
                            geoCollection.remove(item);
                        });
                    });

                    mainMap.geoObjects.each(function (geoCollection) {
                        geoCollection.each(function (item) {
                            var rat = parseFloat(item.properties.get('rating'));
                            if (!showByRate(mainMap.getZoom(), rat)) {
                                geoCollection.remove(item);
                            }
                        });
                    });
                    addPlacemarks(response);
                    renderMap(response);
                    $('#loading').hide();
                    companiesAjaxLoadList();
                },
                error: function(response){
                    console.log(response);
                }
            });
        }

        function companiesAjaxLoadList() {
            $.ajax({
                url: Routing.generate('api_get_companies_list'),
                data: $('#advanced-search-form').serialize() + '&sort=' + $('#sto_content_company_sort_sort').val() + '&search={{ words }}',
                dataType: 'json',
                success: function(response){
                    $('#companiesListContainer').empty();
                    $.each(response, function (index, item) {
                        $('#companiesListContainer').append(item.html);
                    });
                },
                error: function(response){
                    console.log(response);
                }
            });
        }

        function init() {
            mainMap = new ymaps.Map("map", {
                center: [city.split(",")[0], city.split(",")[1]],
                zoom: oldZoom,
                behaviors: ["default", "scrollZoom"]
            });

            mainMap.events.add('click', function (e) {
                mainMap.balloon.close();
            });

            placemarkCollection = new ymaps.GeoObjectCollection();
            mainMap.myCollection = placemarkCollection;

            $('#companiesListContainer').on('click', '.cardCompanyItem', function () {
                var id = $(this).data('item-id');
                $('#x-list-company' + id).slideToggle(0);
                $('#blocSmall_' + id).slideToggle(0);

                placemarkCollection.each(function (o) {
                    if (o.properties.get('id') == id) {
                        o.options.set('iconImageHref', ymaps.option.presetStorage.get("iconMapActive#" + id).iconImageHref);
                        mainMap.setCenter(o.geometry.getBounds()[0]);
                        var position = mainMap.getGlobalPixelCenter();
                        mainMap.setGlobalPixelCenter([ position[0] - 190, position[1] ]);

                        if (globalSelectedItem == null) {
                            globalSelectedItem = o;

                            return;
                        }

                        if (globalSelectedItem.properties.get('id') == id) { return; }

                        globalSelectedItem.options.set('iconImageHref', ymaps.option.presetStorage.get("iconMap#" + globalSelectedItem.properties.get('id')).iconImageHref);
                        globalSelectedItem = o;

                        return;
                    }
                });
            });

            companiesAjaxLoad();

            $('#toggleCompaniesList').on("click", function(e) {
                e.preventDefault();
                $(this).parent().toggleClass('showLeftColumn');
                $('#companiesList').toggle();
                $('.assortSelect').toggle();
                $(this).html($('#companiesList').is(':hidden') ? 'Показать списком' : 'Скрыть');

                mainMap.container.fitToViewport();
            });

            $('#sto_content_company_sort_sort').on('change', function () {
                companiesAjaxLoad();
            });

            $('#advanced-search-form').on('change', 'select', function () {
                companiesAjaxLoad();
            });

            $('#advanced-search-form').on('change', 'input', function () {
                companiesAjaxLoad();
            });

            var mapHeight = $('#map').height();
            var footerHeight = $('section.footer').height();
            $('#companiesListContainer').height(mapHeight - footerHeight - 1);
            $('#advancedSearch').height(mapHeight - footerHeight - 75);
            if (document.documentElement.clientHeight < 800) {
                $('#registration-form-popup').height(600);
            }
        }

        ymaps.ready(init);
    </script>
{% endblock %}

{% block wrap_container_open %}{% endblock %}
{% block wrap_container_close %}{% endblock %}

{% block bottomHeaderWraperBlockStart %}{% endblock %}
{% block bottomHeaderWraperBlockEnd %}{% endblock %}

{% block map %}
    <div id="loading"></div>
    <div id="map"></div>
{% endblock %}

{% block contentTop %}
    <div class="contentTop">
        <div class="contentTopLeft">
            <div class="btnShoeLeftCont">
                <div class="hideLeftColumn">
                    <a href="#" class="hideBtn" id="toggleCompaniesList">Показать списком</a>
                </div>
            </div>
            <div class="selectLeftColumn">
                <div class="assortSelect">
                    <span>Сортировать по:</span>

                    <div class="parametrAssort">
                        <div class="lineForm">
                            {{ form_widget(sortForm.sort) }}
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="contentTopRight">
            <span class="hideRightSearch">
                <a href="#" class="hideBtn" id="toggleAdvancedSearch">Показать расширенный поиск</a>
            </span>
        </div>
        <p class="contentTopCenter">
            Найдено <span>{{ companiesCount }}</span> {{ companiesCountPlural }}
        </p>
    </div>

    <div id="companiesList" class="contentLeft">
        <div id="companiesListContainer"></div>
    </div>

    <div id="advancedSearch" class="contentRightWrap">
        {% render controller('StoContentBundle:Company:advancedSearchForm') %}
    </div>
{% endblock %}

{% block content %}
    {% if not app.user %}
        <div class="popupFirstVisit">
            <i class="icon-remove-sign popupClose"></i>

            <h3 class="titleFirstVisit">В первый раз здесь?</h3>

            <a href="#" class="linkFirstVisitPeople" data-reveal-id="for-car-owners">
                <i class="iconPeople"></i>
                <span>Возможности <br> для автовладельцев</span>
            </a>
            <a href="#" class="linkFirstVisitCompany" data-reveal-id="for-auto-companies">
                <i class="iconCompany"></i>
                <span>Возможности <br> для автокомпаний</span>
            </a>
        </div>
    {% endif %}
{% endblock %}
